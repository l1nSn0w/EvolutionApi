services:
  api:
    container_name: evolution_api
    image: atendai/evolution-api:homolog
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 8080:8080
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolution-net
    env_file:
      - .env
    expose:
      - 8080
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  webhook-service-backend:
    container_name: webhook_service_backend
    build: 
      context: ./webhook-service-react/backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5002:5000
    volumes:
      - ./webhook-service-react/backend:/app
      - /app/node_modules
    networks:
      - evolution-net
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=evolution
      - DB_USER=user
      - DB_PASS=pass
    depends_on:
      - postgres
    command: >
      sh -c "sleep 30 &&
             echo 'Aguardando API inicializar...' &&
             npm run dev"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  webhook-service-frontend:
    container_name: webhook_service_frontend
    build: 
      context: ./webhook-service-react/frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./webhook-service-react/frontend/src:/app/src
      - ./webhook-service-react/frontend/public:/app/public
    networks:
      - evolution-net
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REACT_APP_API_URL=http://localhost:5002
    depends_on:
      - webhook-service-backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:latest
    networks:
      - evolution-net
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - 6379:6379
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    container_name: postgres
    image: postgres:15
    networks:
      - evolution-net
    command: ["postgres", "-c", "max_connections=1000", "-c", "listen_addresses=*"]
    restart: always
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=evolution
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d evolution"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:
  webhook_data:
  frontend_node_modules:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
